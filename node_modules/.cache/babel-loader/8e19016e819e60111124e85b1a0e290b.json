{"ast":null,"code":"import _classCallCheck from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/naveen/Documents/git-commands/src/Components/Card/GitDescription.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport Card from \"./Card\";\n\nvar GitDescription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GitDescription, _Component);\n\n  function GitDescription(props) {\n    var _this;\n\n    _classCallCheck(this, GitDescription);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GitDescription).call(this, props));\n    _this.state = {\n      cli: [{\n        title: \"git clone\",\n        description: \"This command is used to obtain a repository from an existing URL.\",\n        usage: \"git clone [url] \",\n        cli: \"git clone\",\n        id: '1'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(GitDescription, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid git-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.state.cli.map(function (gitCli, i) {\n        return React.createElement(Card, {\n          key: i,\n          gitCli: gitCli,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return GitDescription;\n}(Component);\n\nexport default GitDescription;","map":{"version":3,"sources":["/home/naveen/Documents/git-commands/src/Components/Card/GitDescription.jsx"],"names":["React","Component","Container","Row","Card","GitDescription","props","state","cli","title","description","usage","id","map","gitCli","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,GAAnB,QAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CACH;AACEC,QAAAA,KAAK,EAAE,WADT;AAEEC,QAAAA,WAAW,EAAE,mEAFf;AAGEC,QAAAA,KAAK,EAAE,kBAHT;AAIEH,QAAAA,GAAG,EAAE,WAJP;AAKEI,QAAAA,EAAE,EAAE;AALN,OADG;AADM,KAAb;AAFiB;AAalB;;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmB,UAACC,MAAD,EAASC,CAAT;AAAA,eAAiB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAc,UAAA,MAAM,EAAED,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA,OAAnB,CADH,CADF,CADF;AAOF;;;;EAvB2Bb,S;;AA0B7B,eAAeI,cAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Container, Row} from \"reactstrap\";\nimport Card from \"./Card\";\n\nclass GitDescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cli: [\n        {\n          title: \"git clone\",\n          description: \"This command is used to obtain a repository from an existing URL.\",\n          usage: \"git clone [url] \",\n          cli: \"git clone\",\n          id: '1'\n        }\n      ]\n    };\n  }\n  render() {\n    return (\n      <div className=\"container-fluid git-card\">\n        <div className=\"row\">\n          {this.state.cli.map((gitCli, i) => ( <Card key={i} gitCli={gitCli} /> ))}\n      </div>\n    </div>\n  );\n }\n}\n\nexport default GitDescription;\n"]},"metadata":{},"sourceType":"module"}