{"ast":null,"code":"import _classCallCheck from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/naveen/Documents/git-commands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/naveen/Documents/git-commands/src/Components/Card/GitData.jsx\";\nimport React, { Component } from \"react\";\nimport { Row } from \"reactstrap\";\nimport Card from \"./Card\";\nimport Child from \"./Data\";\n\nvar GitData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GitData, _Component);\n\n  function GitData(props) {\n    var _this;\n\n    _classCallCheck(this, GitData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GitData).call(this, props));\n    _this.state = {\n      git: [{\n        description: \"This command is used to start a new repository.\",\n        id: '1'\n      }, {\n        description: \"This command is used to obtain a repository from an existing URL.\",\n        id: '2'\n      }, {\n        description: \"This command adds a file to the staging area.\",\n        id: '3'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(GitData, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid git-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.git.map(function (gitCliData, i) {\n        return React.createElement(Card, {\n          key: i,\n          gitCliData: gitCliData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return GitData;\n}(Component);\n\nexport default GitData;","map":{"version":3,"sources":["/home/naveen/Documents/git-commands/src/Components/Card/GitData.jsx"],"names":["React","Component","Row","Card","Child","GitData","props","state","git","description","id","map","gitCliData","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,QAAlB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CACH;AACEC,QAAAA,WAAW,EAAE,iDADf;AAEEC,QAAAA,EAAE,EAAE;AAFN,OADG,EAKH;AACED,QAAAA,WAAW,EAAE,mEADf;AAEEC,QAAAA,EAAE,EAAE;AAFN,OALG,EASH;AACED,QAAAA,WAAW,EAAE,+CADf;AAEEC,QAAAA,EAAE,EAAE;AAFN,OATG;AADM,KAAb;AAFiB;AAkBlB;;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,GAAX,CAAeG,GAAf,CAAmB,UAACC,UAAD,EAAaC,CAAb;AAAA,eAAqB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAc,UAAA,UAAU,EAAED,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;AAAA,OAAnB,CADH,CADF,CADF;AAOF;;;;EA5BoBX,S;;AA+BtB,eAAeI,OAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { Row } from \"reactstrap\";\nimport Card from \"./Card\";\nimport Child from \"./Data\";\n\nclass GitData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      git: [\n        {\n          description: \"This command is used to start a new repository.\",\n          id: '1'\n        },\n        {\n          description: \"This command is used to obtain a repository from an existing URL.\",\n          id: '2'\n        },\n        {\n          description: \"This command adds a file to the staging area.\",\n          id: '3'\n        }\n      ]\n    };\n  }\n  render() {\n    return (\n      <div className=\"container-fluid git-card\">\n        <Row>\n          {this.state.git.map((gitCliData, i) => ( <Card key={i} gitCliData={gitCliData} /> ))}\n      </Row>\n    </div>\n  );\n }\n}\n\nexport default GitData;\n"]},"metadata":{},"sourceType":"module"}